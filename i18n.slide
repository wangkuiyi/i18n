i18n
something about internationalization

Yi Wang
LinkedIn

* i18n

- locale
- language
- script
- encoding

* Locale

Locale includes everything

- Number format setting
- Character classification, case conversion settings
- Date - time format setting
- String collation setting
- Currency format setting
- Paper size setting
- Keyboard layout

* Set Locale

POSIX format: `[language[_territory][.codeset][@modifier]]`

  set LC_ALL = en_AU.UTF - 8

POSIX environment variables:

  $ locale
  LANG = cs_CZ.UTF - 8
  LC_CTYPE = "cs_CZ.UTF-8"
  LC_NUMERIC = "cs_CZ.UTF-8"
  LC_TIME = "cs_CZ.UTF-8"
  LC_COLLATE = "cs_CZ.UTF-8"
  LC_MONETARY = "cs_CZ.UTF-8"
  LC_MESSAGES = "cs_CZ.UTF-8"
  LC_PAPER = "cs_CZ.UTF-8"
  LC_NAME = "cs_CZ.UTF-8"
  LC_ADDRESS = "cs_CZ.UTF-8"
  LC_TELEPHONE = "cs_CZ.UTF-8"
  LC_MEASUREMENT = "cs_CZ.UTF-8"
  LC_IDENTIFICATION = "cs_CZ.UTF-8"
  LC_ALL =

* Get Locale

.code LocaleExample.java

Output:

  en_US
  United States
  USA
  English(United States)
  en

* Guess Locale

I found no way to do it.

* Language: Sanskrit Family

.image http://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Phrase_sanskrit.png/500px-Phrase_sanskrit.png _ 400

* Language: Chinese

Official language in: *China*, *Hong* *Kong*, *Macau*, *Taiwan*, *Singapore*, *Burma* *Wa* *State*

Chinese words ... were also borrowed extensively into the *Korean*, *Japanese* and *Vietnamese* languages, and today comprise over half their vocabularies.

* Guess Language

Train a supervised learning model that predicts the language given characters.

.link https://pypi.python.org/pypi/guess-language guess-language

.link https://github.com/saffsd/langid.py langid.py

* Script: Sanskrit Family

Multiple writing systems of Sanskrit:

.image sanskrit.png

* Script: Sanskrit Family

Tibetan words are compositions of Sanskrit scripts

.image tibetan.png 240 _

* Script: Han Unification

Han Unification, an effort by Unicode standard committee, unifies scripts in Simplified Chinese, Traditional Chinese, Japanese, and Korean.

.image cjk.png 350 _


* Script: Han Unification

Factors preventing unification:

.image no-unification.png 250 _

* Script: Distinguish CJK

- Some characters (ideographs) are used in Chinese (or Korean, or Japanese) only.
- Most ideographs are used in all these languages.

* Identify Script

Identifiable scripts in Unicode:

Arabic, Armenian, Avestan, Balinese, Bamum, Batak, Bengali, Bopomofo, Brahmi, Braille, Buginese, Buhid, Canadian_Aboriginal, Carian, Chakma, Cham, Cherokee, Common, Coptic, Cuneiform, Cypriot, Cyrillic, Deseret, Devanagari, Egyptian_Hieroglyphs, Ethiopic, Georgian, Glagolitic, Gothic, Greek, Gujarati, Gurmukhi, *Han*, Hangul, Hanunoo, Hebrew, Hiragana, Imperial_Aramaic, Inherited, Inscriptional_Pahlavi, Inscriptional_Parthian, Javanese, Kaithi, Kannada, Katakana, Kayah_Li, Kharoshthi, Khmer, Lao, Latin, Lepcha, Limbu, Linear_B, Lisu, Lycian, Lydian, Malayalam, Mandaic, Meetei_Mayek, Meroitic_Cursive, Meroitic_Hieroglyphs, Miao, Mongolian, Myanmar, New_Tai_Lue, Nko, Ogham, Ol_Chiki, Old_Italic, Old_Persian, Old_South_Arabian, Old_Turkic, Oriya, Osmanya, Phags_Pa, Phoenician, Rejang, Runic, Samaritan, Saurashtra, Sharada, Shavian, Sinhala, Sora_Sompeng, Sundanese, Syloti_Nagri, Syriac, Tagalog, Tagbanwa, Tai_Le, Tai_Tham, Tai_Viet, Takri, Tamil, Telugu, Thaana, Thai, Tibetan, Tifinagh, Ugaritic, Vai, Yi

* Identify Script

.play scripts.go

* Encoding

How characters are represented by numbers.

- ASCII
- Unicode (UTF-8, UTF-16)
- GB 2312 (for Simplified Chinese)
- BIG5 (for Traditional Chinese)
- etc.

* Guess Encoding

  > enca --list languages
  belarussian: CP1251 IBM866 ISO-8859-5 KOI8-UNI maccyr IBM855 KOI8-U
    bulgarian: CP1251 ISO-8859-5 IBM855 maccyr ECMA-113
        czech: ISO-8859-2 CP1250 IBM852 KEYBCS2 macce KOI-8_CS_2 CORK
     estonian: ISO-8859-4 CP1257 IBM775 ISO-8859-13 macce baltic
     croatian: CP1250 ISO-8859-2 IBM852 macce CORK
    hungarian: ISO-8859-2 CP1250 IBM852 macce CORK
   lithuanian: CP1257 ISO-8859-4 IBM775 ISO-8859-13 macce baltic
      latvian: CP1257 ISO-8859-4 IBM775 ISO-8859-13 macce baltic
       polish: ISO-8859-2 CP1250 IBM852 macce ISO-8859-13 ISO-8859-16 baltic CORK
      russian: KOI8-R CP1251 ISO-8859-5 IBM866 maccyr
       slovak: CP1250 ISO-8859-2 IBM852 KEYBCS2 macce KOI-8_CS_2 CORK
      slovene: ISO-8859-2 CP1250 IBM852 macce CORK
    ukrainian: CP1251 IBM855 ISO-8859-5 CP1125 KOI8-U maccyr
      chinese: GBK BIG5 HZ
         none:
         
An example

  > sudo apt-get install enca
  > echo 长城 | enca -L none
  Universal transformation format 8 bits; UTF-8
         
* Summary

- encoding: not deterministic identifiable
- script: identificable given unicode encoding
- language: 